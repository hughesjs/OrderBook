name: .NET Fake Continuous Deployment

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  
  add-order-perf-test:
    name: Fake Deployment and Perf Testing
    runs-on: ubuntu-latest
    env:
      API_TEST_CONNECTION_STRING: "http://orderbook:5237"
      MONGO_PW: ${MONGO_PASS}
      MONGO_USER: ${MONGO_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ENVIRONMENT: Development
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TEST_FILE: add-order-test
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
          dotnet-quality: 'preview'
      - name: Install deps
        run: apt-get update && apt-get install -y k6
      - name: Build docker stack and run perf tests
        run: docker-compose -f docker-compose-perf-test.yml up --always-recreate-deps --abort-on-container-exit --force-recreate --build perftests

  modify-order-perf-test:
    name: Fake Deployment and Perf Testing
    runs-on: ubuntu-latest
    env:
      API_TEST_CONNECTION_STRING: "http://orderbook:5237"
      MONGO_PW: ${MONGO_PASS}
      MONGO_USER: ${MONGO_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ENVIRONMENT: Development
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TEST_FILE: modify-order-test
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
          dotnet-quality: 'preview'
      - name: Install deps
        run: apt-get update && apt-get install -y k6
      - name: Build docker stack and run perf tests
        run: docker-compose -f docker-compose-perf-test.yml up --always-recreate-deps --abort-on-container-exit --force-recreate --build perftests
        
  get-price-perf-test:
    name: Fake Deployment and Perf Testing
    runs-on: ubuntu-latest
    env:
      API_TEST_CONNECTION_STRING: "http://orderbook:5237"
      MONGO_PW: ${MONGO_PASS}
      MONGO_USER: ${MONGO_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ENVIRONMENT: Development
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TEST_FILE: get-price-test
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
          dotnet-quality: 'preview'
      - name: Install deps
        run: apt-get update && apt-get install -y k6
      - name: Build docker stack and run perf tests
        run: docker-compose -f docker-compose-perf-test.yml up --always-recreate-deps --abort-on-container-exit --force-recreate --build perftests
        
  cycle-perf-test:
    name: Fake Deployment and Perf Testing
    runs-on: ubuntu-latest
    env:
      API_TEST_CONNECTION_STRING: "http://orderbook:5237"
      MONGO_PW: ${MONGO_PASS}
      MONGO_USER: ${MONGO_USER}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      ENVIRONMENT: Development
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      REDIS_HOST: redis
      REDIS_PORT: 6379
      TEST_FILE: cycle-test
    steps:
      - uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'
          dotnet-quality: 'preview'
      - name: Install deps
        run: apt-get update && apt-get install -y k6
      - name: Build docker stack and run perf tests
        run: docker-compose -f docker-compose-perf-test.yml up --always-recreate-deps --abort-on-container-exit --force-recreate --build perftests
        
