syntax = "proto3";

import "Application/Protobuf/ProtosDefinitions/customtypes/guid.proto";
import "Application/Protobuf/ProtosDefinitions/customtypes/decimal.proto";
import "Application/Protobuf/ProtosDefinitions/customtypes/responsestatus.proto";
import "Application/Protobuf/ProtosDefinitions/customtypes/assetdefinition.proto";

import "google/protobuf/timestamp.proto";

package orderBook;

option csharp_namespace = "OrderBookProtos.ServiceBases";

service OrderBookService {
  rpc AddOrder (AddOrderRequest) returns (AddOrderResponse);
  rpc ModifyOrder (ModifyOrderRequest) returns (ModifyOrderResponse);
  rpc RemoveOrder (RemoveOrderRequest) returns (ModifyOrderResponse);
  
  rpc GetPrice (GetPriceRequest) returns (PriceResponse);
}

message AddOrderRequest {
  customProtoTypes.GuidValue idempotencyKey = 1;
  customProtoTypes.AssetDefinitionValue assetDefinition = 2;
  customProtoTypes.DecimalValue amount = 3;
  customProtoTypes.DecimalValue price = 4;
  OrderAction orderAction = 5;
}

message ModifyOrderRequest {
  customProtoTypes.GuidValue idempotencyKey = 1;
  customProtoTypes.GuidValue orderId = 2;
  customProtoTypes.AssetDefinitionValue assetDefinition = 3;
  customProtoTypes.DecimalValue amount = 4;
  customProtoTypes.DecimalValue price = 5;
  OrderAction orderAction = 6;
}

message RemoveOrderRequest {
  customProtoTypes.GuidValue idempotencyKey = 1;
  customProtoTypes.GuidValue orderId = 2;
  customProtoTypes.AssetDefinitionValue assetDefinition = 3;
}

message GetPriceRequest {
  customProtoTypes.AssetDefinitionValue assetDefinition = 1;
  customProtoTypes.DecimalValue amount = 2;
  OrderAction orderAction = 3;
}

message AddOrderResponse {
  customProtoTypes.Status status= 1;
  customProtoTypes.GuidValue orderId = 2;
  google.protobuf.Timestamp effectiveFrom = 3;
}

message ModifyOrderResponse {
  customProtoTypes.Status status= 1;
  google.protobuf.Timestamp effectiveFrom = 2;
}

message PriceResponse {
   customProtoTypes.Status status = 1;
   google.protobuf.Timestamp validAt = 2;
   customProtoTypes.DecimalValue price = 3;
}

enum OrderAction {
  Buy = 0;
  Sell = 1;
}

