version: "3.1"

services:

  mongo:
    hostname: mongo
    image: mongo
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PW}
    command:
      - --bind_ip_all
    networks:
      - backend

  redis:
    hostname: redis
    image: "bitnami/redis:latest"
    command: redis-server --requirepass ${REDIS_PASSWORD} --save "" --appendonly no
    restart: unless-stopped
    networks:
      - backend
  
  orderbook:
    build:
      context: src
      dockerfile: backend/Dockerfile
    environment:
      - MongoDbSettings__ConnectionString=mongodb://${MONGO_USER}:${MONGO_PW}@${MONGO_HOST}:${MONGO_PORT}
      - MongoDbSettings__DatabaseName=OrderBooks
      - RedisSettings__ConnectionString=${REDIS_HOST}:${REDIS_PORT},password=${REDIS_PASSWORD}
      # Set this to "Development" for gRPC reflection
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
    depends_on:
      - mongo
      - redis
    restart: unless-stopped
    ports:
      - "5237:80"
    networks:
      - backend
      - frontend

networks:
  backend:
    internal: true
  frontend:
    internal: false

